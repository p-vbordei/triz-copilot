{
  "name": "triz-copilot",
  "version": "1.0.0",
  "description": "TRIZ Engineering Co-Pilot for Claude CLI",
  "protocol": "mcp",
  "tools": [
    {
      "name": "triz-workflow",
      "description": "Start or continue a guided TRIZ problem-solving workflow",
      "inputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["start", "continue"],
            "default": "start",
            "description": "Start new workflow or continue existing session"
          },
          "session_id": {
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
            "description": "Session ID for continuing workflow (required if action=continue)"
          },
          "input": {
            "type": "string",
            "maxLength": 2000,
            "description": "User input for current workflow step"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "session_id": {
            "type": "string"
          },
          "stage": {
            "type": "string",
            "enum": [
              "problem_definition",
              "function_analysis", 
              "parameter_mapping",
              "principle_identification",
              "solution_generation",
              "evaluation",
              "complete"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "next_action": {
            "type": "string"
          }
        },
        "required": ["success", "message"]
      }
    },
    {
      "name": "triz-solve",
      "description": "Perform autonomous TRIZ analysis on a problem",
      "inputSchema": {
        "type": "object",
        "properties": {
          "problem": {
            "type": "string",
            "minLength": 10,
            "maxLength": 2000,
            "description": "Engineering problem description"
          },
          "industry": {
            "type": "string",
            "description": "Optional industry context"
          },
          "constraints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional constraints or requirements"
          }
        },
        "required": ["problem"],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "session_id": {
            "type": "string"
          },
          "analysis": {
            "type": "object",
            "properties": {
              "problem_summary": {
                "type": "string"
              },
              "contradictions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["technical", "physical"]
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "recommended_principles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 40
                    },
                    "name": {
                      "type": "string"
                    },
                    "relevance_score": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1
                    }
                  }
                }
              },
              "solution_concepts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "principles_applied": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "pros": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cons": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": ["success", "analysis"]
      }
    },
    {
      "name": "triz-tool",
      "description": "Access specific TRIZ tools and resources",
      "inputSchema": {
        "type": "object",
        "properties": {
          "tool": {
            "type": "string",
            "enum": ["get-principle", "contradiction-matrix", "brainstorm"],
            "description": "Specific TRIZ tool to access"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "principle_number": {
                "type": "integer",
                "minimum": 1,
                "maximum": 40,
                "description": "Principle number for get-principle or brainstorm"
              },
              "improving_parameter": {
                "type": "integer",
                "minimum": 1,
                "maximum": 39,
                "description": "Improving parameter for contradiction matrix"
              },
              "worsening_parameter": {
                "type": "integer",
                "minimum": 1,
                "maximum": 39,
                "description": "Worsening parameter for contradiction matrix"
              },
              "context": {
                "type": "string",
                "maxLength": 500,
                "description": "Context for brainstorming"
              }
            }
          }
        },
        "required": ["tool", "parameters"],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "tool": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "description": "Tool-specific result data"
          },
          "error": {
            "type": "string",
            "description": "Error message if success=false"
          }
        },
        "required": ["success"]
      }
    }
  ],
  "errors": {
    "INVALID_SESSION": {
      "code": -32001,
      "message": "Session not found or expired"
    },
    "INVALID_PARAMETER": {
      "code": -32002,
      "message": "Invalid parameter value"
    },
    "DATABASE_ERROR": {
      "code": -32003,
      "message": "Database connection failed"
    },
    "TIMEOUT": {
      "code": -32004,
      "message": "Operation timed out"
    }
  },
  "configuration": {
    "timeout_seconds": 30,
    "max_message_size": 1048576,
    "session_ttl_hours": 24,
    "max_concurrent_sessions": 100
  }
}